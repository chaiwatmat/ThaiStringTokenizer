name: build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.2.108
      - name: Build with dotnet
        run: |
          dotnet build --configuration Debug
      # test:
      #   needs: [build]
      #   runs-on: ubuntu-latest
      #   steps:
      - name: Get cc-test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64 > ./cc-test-reporter && \
          chmod +x ./cc-test-reporter
      - name: Code climate before build
        run: ./cc-test-reporter before-build
      - name: Run unit test result lcov
        run: |
          dotnet test \
             --no-build \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=lcov \
            /p:CoverletOutput="../coverage/lcov.info" \
            /p:Threshold=80 \
            /p:ThresholdType=branch
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov.info
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: "true"
      - name: Publish code coverage to codeclimate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          ./cc-test-reporter after-build \
            --coverage-input-type lcov \
            --id ${{ CC_TEST_REPORTER_ID }} \
            --exit-code $? || echo  "Skipping Code Climate coverage upload"
